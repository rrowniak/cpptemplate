function error_exit ()
{
    echo "Aborting" 1>&2
    exit 1
}

function skip_if_installed ()
{
    FILE_TO_CHECK=$1
    if [ -f $FILE_TO_CHECK ]; then
        echo "Library seems to be installed. Skipping"
        exit 0;
    fi
}

function get_file ()
{
    FILE_PATH=$1
    URL=$2

    cd $LIB_DIR

    if [ ! -f $FILE_PATH ]; then
        echo "File not found. Downloading..."
        wget $URL
        if [ $? -ne 0 ]; then
            echo "Unable to download file from $URL."
            rm $FILE_PATH
            error_exit
        fi
    fi
}

function extract_tar_gz_if_not_exists ()
{
    TAR_FILE=$1
    DEST_DIR=$2

    cd $LIB_DIR

    if [ ! -d "$DEST_DIR" ]; then
        mkdir -p $DEST_DIR
        tar xf "$TAR_FILE"
        if [ $? -ne 0 ]; then
            echo "Unable to extract file $TAR_FILE."
            echo Command: tar xfz "$TAR_FILE" -C "$DEST_DIR"
            error_exit
        fi
    fi
}

function configure_std()
{
    echo "Configuring project..."
    cmdout=$(./configure --prefix $LIB_DIR 2>&1) 
    if [ $? -ne 0 ]; then
        echo $cmdout
        error_exit
    fi
    echo "Done."
}

function make_std()
{
    echo "Building project..."
    cmdout=$(make -j4 2>&1)
    if [ $? -ne 0 ]; then
        echo $cmdout
        error_exit
    fi
    echo "Done."
}

function make_install_std()
{
    echo "Installing project..."
    cmdout=$(make install 2>&1)
    if [ $? -ne 0 ]; then
        echo $cmdout
        error_exit
    fi
    echo "Done."
}